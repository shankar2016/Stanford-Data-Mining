library("httpuv")
library("RCurl")
library("plyr")
#' TexST_TwitterAuthSetup : Set up credentials for authentication with Twitter using keys from global variables.
#'
#' \code{TexSt_TwitterAuthSetup} TexST_TwitterAuthSetup sets up credentials for authentication with Twitter database.
#'
#' TexST_TwitterAuth takes no input, extracts keys that are prestored in global variables,
#' and sets up the credentials to be used for authentication with Twitter
#'
#' @return none
#' @examples
#' textR_TwitterAuthSetup()
#'
TexST_TwitterAuthSetup <- function() {
# Download a Curl certificate
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#
# Set constant requestURL
requestURL <- "https://api.twitter.com/oauth/request_token"
# Set constant accessURL
accessURL <- "https://api.twitter.com/oauth/access_token"
# Set constant authURL
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "yvXM5zB1VtAGNBuHXlseaKJ2g"
consumerSecret <- "sJHBriUJd4yqtWa60npJrG8By13rtfqrU1URVDA8geAmSEr3tl"
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
save(twitCred, file = "twitter authentication.Rdata")
}
#' TexST_TwitterAuthenticate : Completes Authentication with Twitter
#'
#' \code{TexST_TwitterAuthenticate} TexST_TwitterAuthenticate completes authentication with Twitter database.
#'
#' TexST_TwitterAuthenticate takes no input, interactes with Twitter and establishes local host as a
#' authenticated entity for authentication with Twitter
#'
#' @return none
#' @examples
#' textR_TwitterAuthenticate()
#'
TexST_TwitterAuthenticate () {
load("twitter authentication.Rdata")
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
TexST_TwitterAuthenticate <- function () {
load("twitter authentication.Rdata")
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
}
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweets.df = ldply(tweets, function(t) t$toDataFrame() )
write.table(tweets.df, "baselineTweets")
}
TexST_TwitterAuthSetup()
TexST_TwitterAuthenticate()
TexST_TwitterGetTweets("Golden Gate", 100)
getwd()
xx <- read.table("baselineTweets")
xx <- read.table(file = "baselineTweets")
?read.table
read.table("baselineTweets")
tweets.df
read.table("baselineTweets", header = FALSE, stringsAsFactors = FALSE)
read("baselineTweets", header = FALSE, stringsAsFactors = FALSE)
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweets.df = ldply(tweets, function(t) t$toDataFrame() )
write.table(tweets.df, "tweets.df")
}
TexST_TwitterGetTweets("Golden Gate", 100)
read.table("tweets.df")
?scan
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweets.df = ldply(tweets, function(t) t$toDataFrame() )
write.table(tweets.df, "tweetsDF")
}
TexST_TwitterGetTweets("Golden Gate", 100)
scan(file= "tweetsDF")
head(tweetsDF)
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweets.df = ldply(tweets, function(t) t$toDataFrame() )
browser()
write.table(tweets.df, "tweetsDF")
}
TexST_TwitterGetTweets("Golden Gate", 100)
head(tweets.df)
is.data.frame(tweets.df)
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweetsDF = ldply(tweets, function(t) t$toDataFrame())
write.table(tweetsDF, "tweetsDF")
}
TexST_TwitterGetTweets("Golden Gate", 100)
?read.table
xx <- read.table("tweetsDF", header=TRUE)
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweetsDF = ldply(tweets, function(t) t$toDataFrame())
browser()
write.table(tweetsDF, "tweetsDF")
}
TexST_TwitterGetTweets("Golden Gate", 100)
nrow(tweetsDF)
ncol(tweetsDF)
names(tweetsDF)
xx <- read.table("tweetsDF", header=TRUE)
xx <- read.table("tweetsDF", header=TRUE, as.is = TRUE)
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweetsDF = ldply(tweets, function(t) t$toDataFrame())
browser()
write.table(tweetsDF, "tweetsDF", sep="\t")
}
TexST_TwitterGetTweets("Golden Gate", 100)
head(tweetsDF)
xx <- read.table("tweetsDF", header=TRUE, as.is = TRUE)
getwd()
xx <- read.table("tweetsDF", header=TRUE, sep="\t", as.is = TRUE)
xx
head(xx)
xx <- read.table("tweetsDF", header=TRUE, sep="\t", as.is = TRUE)
vignette(RUNit)
vignette(RUnit)
install.packages("RUnit")
vignette(RUnit)
library(RUnit)
ls()
install.packages("twitteR")
install.packages("ROAuth")
install.packages("httr")
install.packages("httpuv")
install.packages("RCurl")
install.packages("plyr")
install.packages("twitteR")
install.packages("ROAuth")
install.packages("httr")
install.packages("RCurl")
install.packages("httr")
install.packages("RCurl")
install.packages("RCurl")
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
#' Set up credentials for authentication with Twitter using keys from global variables.
#'
#' \code{TexSt_TwitterAuthSetup} sets up credentials for authentication with Twitter database.
#'
#' TexST_TwitterAuth takes no input, extracts keys that are prestored in global variables,
#' and sets up the credentials to be used for authentication with Twitter
#'
#' @return success or failure
#' @examples
#' \dontrun{
#'    textR_TwitterAuthSetup()
#'}
TexST_TwitterAuthSetup <- function() {
# Download a Curl certificate
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#
# Set constant requestURL
requestURL <- "https://api.twitter.com/oauth/request_token"
# Set constant accessURL
accessURL <- "https://api.twitter.com/oauth/access_token"
# Set constant authURL
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "yvXM5zB1VtAGNBuHXlseaKJ2g"
consumerSecret <- "sJHBriUJd4yqtWa60npJrG8By13rtfqrU1URVDA8geAmSEr3tl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
save(twitCred, file = "twitter authentication.Rdata")
}
# http://blog.credera.com/business-intelligence/twitter-analytics-using-r-part-1-extract-tweets/
#https://github.com/hadley/httr/issues/195
# https://github.com/hadley/httr/commit/50b14cb879e4ad3a668749a20ad0b627933dec95
#https://heuristically.wordpress.com/2011/04/08/text-data-mining-twitter-r/
# reference for next URL https://dev.twitter.com/rest/reference/get/geo/search
#https://api.twitter.com/1.1/geo/search.json?accuracy=0&query=Toronto&granularity=neighborhood&autocomplete=false&trim_place=false
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
#' Set up credentials for authentication with Twitter using keys from global variables.
#'
#' \code{TexSt_TwitterAuthSetup} sets up credentials for authentication with Twitter database.
#'
#' TexST_TwitterAuth takes no input, extracts keys that are prestored in global variables,
#' and sets up the credentials to be used for authentication with Twitter
#'
#' @return success or failure
#' @examples
#' \dontrun{
#'    textR_TwitterAuthSetup()
#'}
# http://blog.credera.com/business-intelligence/twitter-analytics-using-r-part-1-extract-tweets/
#https://github.com/hadley/httr/issues/195
# https://github.com/hadley/httr/commit/50b14cb879e4ad3a668749a20ad0b627933dec95
#https://heuristically.wordpress.com/2011/04/08/text-data-mining-twitter-r/
# reference for next URL https://dev.twitter.com/rest/reference/get/geo/search
#https://api.twitter.com/1.1/geo/search.json?accuracy=0&query=Toronto&granularity=neighborhood&autocomplete=false&trim_place=false
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
#' Set up credentials for authentication with Twitter using keys from global variables.
#'
#' \code{TexSt_TwitterAuthSetup} sets up credentials for authentication with Twitter database.
#'
#' TexST_TwitterAuth takes no input, extracts keys that are prestored in global variables,
#' and sets up the credentials to be used for authentication with Twitter
#'
#' @return success or failure
#' @examples
#' \dontrun{
#'    textR_TwitterAuthSetup()
#'}
# http://blog.credera.com/business-intelligence/twitter-analytics-using-r-part-1-extract-tweets/
#https://github.com/hadley/httr/issues/195
# https://github.com/hadley/httr/commit/50b14cb879e4ad3a668749a20ad0b627933dec95
#https://heuristically.wordpress.com/2011/04/08/text-data-mining-twitter-r/
# reference for next URL https://dev.twitter.com/rest/reference/get/geo/search
#https://api.twitter.com/1.1/geo/search.json?accuracy=0&query=Toronto&granularity=neighborhood&autocomplete=false&trim_place=false
http://blog.credera.com/business-intelligence/twitter-analytics-using-r-part-1-extract-tweets/
#https://github.com/hadley/httr/issues/195
# https://github.com/hadley/httr/commit/50b14cb879e4ad3a668749a20ad0b627933dec95
#https://heuristically.wordpress.com/2011/04/08/text-data-mining-twitter-r/
# reference for next URL https://dev.twitter.com/rest/reference/get/geo/search
#https://api.twitter.com/1.1/geo/search.json?accuracy=0&query=Toronto&granularity=neighborhood&autocomplete=false&trim_place=false
# http://blog.credera.com/business-intelligence/twitter-analytics-using-r-part-1-extract-tweets/
#https://github.com/hadley/httr/issues/195
# https://github.com/hadley/httr/commit/50b14cb879e4ad3a668749a20ad0b627933dec95
#https://heuristically.wordpress.com/2011/04/08/text-data-mining-twitter-r/
# reference for next URL https://dev.twitter.com/rest/reference/get/geo/search
#https://api.twitter.com/1.1/geo/search.json?accuracy=0&query=Toronto&granularity=neighborhood&autocomplete=false&trim_place=false
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
library("twitteR")
library("ROAuth")
library("httr")
library("httpuv")
library("RCurl")
library("plyr")
accessToken <- "285069938-ls4UHjJU2eGt5DdQsPkQsmsYt16SeDzloKPrqUvU"
accessTokenSecret <- "xbnK50700XY6SQjBOFEAp276R8jFy1BzPtohMse2nvARV"
#' Set up credentials for authentication with Twitter using keys from global variables.
#'
#' \code{TexSt_TwitterAuthSetup} sets up credentials for authentication with Twitter database.
#'
#' TexST_TwitterAuth takes no input, extracts keys that are prestored in global variables,
#' and sets up the credentials to be used for authentication with Twitter
#'
#' @return success or failure
#' @examples
#' \dontrun{
#'    textR_TwitterAuthSetup()
#'}
TexST_TwitterAuthSetup <- function() {
# Download a Curl certificate
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#
# Set constant requestURL
requestURL <- "https://api.twitter.com/oauth/request_token"
# Set constant accessURL
accessURL <- "https://api.twitter.com/oauth/access_token"
# Set constant authURL
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "yvXM5zB1VtAGNBuHXlseaKJ2g"
consumerSecret <- "sJHBriUJd4yqtWa60npJrG8By13rtfqrU1URVDA8geAmSEr3tl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
save(twitCred, file = "twitter authentication.Rdata")
}
TexST_TwitterAuthSetu
TexST_TwitterAuthSetup()
#' Completes Authentication with Twitter
#'
#' \code{TexST_TwitterAuthenticate} completes authentication with Twitter server.
#'
#' TexST_TwitterAuthenticate takes no input, interactes with Twitter and establishes local host as a
#' authenticated entity for authentication with Twitter
#'
#' @return success or failure
#' @examples
#' \dontrun{
#' TexST_TwitterAuthSetup()
#' textR_TwitterAuthenticate()
#' }
TexST_TwitterAuthenticate <- function () {
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key = twitCred$consumerKey,
consumer_secret=twitCred$consumerSecret,
access_token = accessToken,
access_secret = accessTokenSecret)
}
TexST_TwitterAuthenticate()
#' Get tweets given a search string
#'
#' \code{TexST_TwitterGetTweets} gets one or more tweets within San Francisc, given a search string, and writes to file tweetsDF
#'
#' The search works for tweets that originated within 15 mile sof a core point San Francisco downtown area
#' @param search.string A string
#' @param numberOfTweets a number
#'
#' @return success or failure
#' @examples
#' \dontrun{
#'    TexST_TwitterAuthSetup()
#'    textR_TwitterAuthenticate()
#'    TexST_TwitterGetTweets("Giants", 22)
#'}
TexST_TwitterGetTweets <- function (search.string = "", numberOfTweets = 1) {
tweets <- searchTwitter(search.string, n=numberOfTweets, geocode = "37.794108,-122.39511,15mi", since="2015-01-01", lang="en")
# Put data into a data frame
tweetsDF = ldply(tweets, function(t) t$toDataFrame())
browser()
write.table(tweetsDF, "tweetsDF", sep="\t")
}
xx <- read.table("tweetsDF", header = TRUE, sep="\t", as.is=TRUE, stringsAsFactors = FALSE, fill = TRUE)
xx
stringsAsFactors = FALSE
library(stringr)
#' Break down a gouping of tweets into words and count the words
#'
#' \code{TexST_WordExtractor} Given a set of filtered tweets, count the number and frequency of words within
#'
#' Given a set of filtered tweets, count the number and frequency of words within
#'
#' @return Data Frame with words column and count column
#' @examples
#' \dontrun{
#'    TexST_TwitterAuthSetup()
#'    textR_TwitterAuthenticate()
#'    TexST_TwitterGetTweets("Giants", 22)
#'    TexST_WordExtractor()
#'}
#'
setwd("c:/Personal/R/Project")
TexST_splitTweetIntoWords <- function(tweetText) {
tweetText <- tolower(tweetText)
tweetText <- stringr::str_trim(tweetText)
unlist(strsplit(tweetText, "[[:space:]]+"))
}
TexST_WordExtractor <- function () {
tweetDF <- read.table("tweetsDF", header = TRUE, sep="\t", as.is=TRUE, stringsAsFactors = FALSE, fill = TRUE)
# just get the first column which is the text column
tweetText <- tweetDF$text
#for (i in 1:length(tweetsText)) {
words <- unlist(lapply(tweetText, TexST_splitTweetIntoWords))
wordsDF <- as.data.frame(words)
browser()
# add a column of weight, statr with each word having a count of 1
wordsDF$count <- 1
browser()
aggregatedWordsDF <- aggregate( count ~ text, wordsDF, sum)
browser()
write.table(aggregatedWordsDF, "aggregatedWordsDF", sep="\t")
#}
}
TexST_WordExtractor()
stringsAsFactors = FALSE
library(stringr)
#' Break down a gouping of tweets into words and count the words
#'
#' \code{TexST_WordExtractor} Given a set of filtered tweets, count the number and frequency of words within
#'
#' Given a set of filtered tweets, count the number and frequency of words within
#'
#' @return Data Frame with words column and count column
#' @examples
#' \dontrun{
#'    TexST_TwitterAuthSetup()
#'    textR_TwitterAuthenticate()
#'    TexST_TwitterGetTweets("Giants", 22)
#'    TexST_WordExtractor()
#'}
#'
setwd("c:/Personal/R/Project")
TexST_splitTweetIntoWords <- function(tweetText) {
tweetText <- tolower(tweetText)
tweetText <- stringr::str_trim(tweetText)
unlist(strsplit(tweetText, "[[:space:]]+"))
}
TexST_WordExtractor <- function () {
tweetDF <- read.table("tweetsDF", header = TRUE, sep="\t", as.is=TRUE, stringsAsFactors = FALSE, fill = TRUE)
# just get the first column which is the text column
tweetText <- tweetDF$text
words <- unlist(lapply(tweetText, TexST_splitTweetIntoWords))
wordsDF <- as.data.frame(words)
# add a column of weight, statr with each word having a count of 1
wordsDF$count <- 1
aggregatedWordsDF <- aggregate( count ~ text, wordsDF, sum)
write.table(aggregatedWordsDF, "aggregatedWordsDF", sep="\t")
}
TexST_WordExtractor()
ls()
ls()
?TexST
library(TexST)
?TexST
?TexST_TwitterAuthSetup
TexST_TwitterAuthSetup()
?
search()
library(TexST)
search()
load(TexST)
attach(TexST)
loadNamespace(TexST)
loadNamespace("TexST")
search()
?install.packages
environment()
foo <- new.env()
source()
?TwitterAuthenticate
?system2
?url.exists
library(RCurl)
?url.exists
?pipe
setwd("Desktop")
install.packages("shankarz.TexST_1.0.tar.gz", repos=NULL, type="source")
library("shankarz.TexST")
?shankarz.TexST
help(shankarz.TexST)
help("shankarz.TexST")
twitterAuthenticate()
ls()
search()
roxygen2::roxygenise()
getwd()
setwd("shankarz.TexST")
roxygen2::roxygenise()
head(sfTweets)
devtools::build()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
getwd()
setwd("vignettes")
library(rmarkdown)
render("project-summary.Rmd", "pdf_document")
?render
render("project-summary.Rmd", "html_document")
getwd()
setwd("../inst/doc")
render("project-summary.Rmd", "html_document")
render("project-summary.Rmd", "pdf_document")
getwd()
setwd("../../Desktop")
setwd("../../../Desktop")
devtools::build()
setwd("shankarz.TexST")
devtools::build()
getwd()
devtools::use_vignette("project-summary")
devtools::build()
devtools::build()
getwd()
setwd("vignettes")
devtools::build()
